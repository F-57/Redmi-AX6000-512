#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############改名字##############
name: Hanwckf_21.02

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 检查缓存
      id: check-cache
      if: env.WRT_TEST != 'true'
      uses: actions/cache@main
      with:
       key: openwrt-21.02-${{ hashFiles('openwrt/.config') }}
       restore-keys: ${{env.WRT_CONFIG}}-${{env.WRT_VER}}
       path: |
          ./workdir/.ccache
          ./workdir/staging_dir/host*
          ./workdir/staging_dir/tool*

    - name: 更新缓存
      if: env.WRT_TEST != 'true'
      run: |
          if [ -d "./workdir/staging_dir" ]; then
            find "./workdir/staging_dir" -type d -name "stamp" -not -path "*target*" | while read -r DIR; do
              find "$DIR" -type f -exec touch {} +
            done

            mkdir -p ./workdir/tmp && echo "1" > ./workdir/tmp/.build

            echo "toolchain skiped done!"
          else
            echo "缓存丢失!"
          fi

          if ${{steps.check-cache.outputs.cache-hit != 'true'}}; then
            CACHE_LIST=$(gh cache list --key "$WRT_CONFIG-$WRT_VER" | cut -f 1)
            for CACHE_KEY in $CACHE_LIST; do
              gh cache delete $CACHE_KEY
            done

            echo "缓存清理完成!"
          fi
         
    - name: 加载feeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: 更新 & 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: 加载config & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 下载安装包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "COMPILE_STATUS=success" >> $GITHUB_ENV
        echo "mediatek_mt7986_redmi_ax6000" > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%y.%-m.%-d")" >> $GITHUB_ENV

    - name: 保存缓存
      if: always()
      uses: actions/cache@v3
      with:
        key: openwrt-21.02-${{ hashFiles('openwrt/.config') }}
        path: |
          ./workdir/.ccache
          ./workdir/staging_dir/host*
          ./workdir/staging_dir/tool*
        
    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件并重命名
      id: organize
      if: env.COMPILE_STATUS == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "ORGANIZE_STATUS=success" >> $GITHUB_ENV
      
    - name: 上传固件到 artifact
      uses: actions/upload-artifact@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: 固件发布
      id: release
      uses: ncipollo/release-action@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && (!cancelled())
      with:
        tag: ${{ env.FILE_DATE }}-redmi_ax6000
        removeArtifacts: false
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
            自用红米AX6000改512版, hanwckf大佬闭源驱动版固件
            基于openwrt-21.02, kernel 5.4, 编译时间: ${{ env.FILE_DATE }}
            
            Default IP: 10.0.0.1
            Default Wi-Fi: AX6000
            Default username: root
            Default password: 无
            
            插件列表： 
              ├ eqos-mtk+openclash+mosdns+lucky+airconnect+wireguard
        
    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@master
      if: env.ORGANIZE_STATUS == 'success' && !cancelled()
      with:
        repo: ${{ github.repository }}
        keep_latest: 2
        delete_tag_pattern: 'redmi_ax6000'
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
