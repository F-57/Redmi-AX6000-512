name: Redmi-AX6000-512

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始化编译环境（带缓存）
      id: cache-setup
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL bit.ly/3AS48v1)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 检查缓存
      id: check-cache
      uses: actions/cache@main
      with:
        path: |
          ./openwrt/.ccache
          ./openwrt/staging_dir/host*
          ./openwrt/staging_dir/tool*
        key: openwrt-${{ env.REPO_BRANCH }}-${{ github.run_id }}
        restore-keys: openwrt-${{ env.REPO_BRANCH }}

    - name: 下载固件源码（仅当无缓存时）
      if: steps.check-cache.outputs.cache-hit != 'true'
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载 feeds & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: 更新 & 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载 config & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: 下载安装包（检查缓存）
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件（支持缓存）
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "COMPILE_STATUS=success" >> $GITHUB_ENV
        echo "mediatek_mt7986_redmi_ax6000" > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%y.%-m.%-d")" >> $GITHUB_ENV
        
    - name: 查看磁盘使用情况
      run: df -hT

    - name: 整理文件并重命名
      id: organize
      if: env.COMPILE_STATUS == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "ORGANIZE_STATUS=success" >> $GITHUB_ENV
      
    - name: 上传固件到 artifact
      uses: actions/upload-artifact@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: 固件发布
      id: release
      uses: ncipollo/release-action@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_RELEASE == 'true'
      with:
        tag: ${{ env.FILE_DATE }}-redmi_ax6000
        removeArtifacts: false
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
            redmi-ax6000 固件精简版, 闭源驱动
            基于openwrt-21.02, kernel 5.4, 编译时间: ${{ env.FILE_DATE }}
            
            IP: 10.0.0.1
            Wi-Fi: Ax6000
            Wi-Fi密码: cw010203
            username: root
            password: 无
            
            插件列表： 
              ├ eqos-mtk+openclash+mosdns+lucky+airconnect+wireguard
        
    - name: 删除工作流程运行
      uses: Mattraks/delete-workflow-runs@main
      if: env.ORGANIZE_STATUS == 'success'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 2
        delete_workflow_pattern: "redmi_ax6000"

    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@master
      if: env.ORGANIZE_STATUS == 'success'
      with:
        repo: ${{ github.repository }}
        keep_latest: 2
        delete_tag_pattern: 'redmi_ax6000'
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
